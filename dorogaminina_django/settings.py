"""
Django settings for dorogaminina_django project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG == False:
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    # BASE_DIR = Path(__file__).resolve().parent.parent
    BASE_DIR = Path(__file__).resolve().parent.parent
    # PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

    # Media files
    MEDIA_URL='/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

    STATIC_URL = '/static/'
    # STATICFILES_DIRS = [os.path.join(BASE_DIR, 'public_html/static')]
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

    CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
else:
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    BASE_DIR = Path(__file__).resolve().parent.parent

    MEDIA_URL= "/media/"
    MEDIA_ROOT= os.path.join(BASE_DIR, 'media')

    STATIC_URL = '/static/'
    # STATICFILE_DIR = os.path.join(BASE_DIR, 'static/')
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

    CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"

    # STATICFILES_DIRS = [
    #     STATICFILE_DIR,
    # ]

TEMPLATE_DIR = os.path.join(BASE_DIR, "templates")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6hw98=n0)bbu_ct6mzhop(*896)(*455+7j0maikpqx51dymd5'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'robokassa',
    'smsru',
    'ckeditor',
    'import_export',
    'captcha',
    'blog',
    'home',
    'events'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dorogaminina_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dorogaminina_django.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if DEBUG == True:
    ALLOWED_HOSTS = []
    # ALLOWED_HOSTS = ['xn--80aahdwa0ajbdax.xn--p1ai', '81.177.165.238']
    DATABASES = {
        'default': {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3")
        }
    }
    # DATABASES = {
    #     'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'j1228127_dorogam',
    #     'USER' : 'j1228127_dorogam',
    #     'PASSWORD' : 'Huteras52',
    #     'HOST' : 'localhost',
    #     'PORT' : '3306',
    #     }
    # }
else:
    ALLOWED_HOSTS = ['xn--80aahdwa0ajbdax.xn--p1ai', '81.177.165.238']
    # DATABASES = {
    #     'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'dorogaminina',
    #     'USER' : 'razrus',
    #     #'USER' : 'postgres',
    #     'PASSWORD' : 'Huteras52',
    #     'HOST' : '127.0.0.1',
    #     'PORT' : '5432',
    #     }
    # }
    DATABASES = {
        'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'j1228127_dorogam',
        'USER' : 'j1228127_dorogam',
        'PASSWORD' : 'Huteras52',
        'HOST' : 'localhost',
        'PORT' : '3306',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# AUTH
AUTH_USER_MODEL = 'home.User'
AUTHENTICATION_BACKENDS = ('home.backends.AuthBackend',)

SMS_RU = {
    "API_ID": '4E399A77-C189-225C-4D5A-E15F15F3FE82', # если указан API ключ, логин и пароль пропускаем
    "TEST": False, # отправка смс в тестовом режиме, по умолчанию False
    # "SENDER": 'DorogaM', # отправитель - необязательно поле
}

ROBOKASSA_STRICT_CHECK = True
ROBOKASSA_LOGIN = 'dorogaminina'
#ROBOKASSA_PASSWORD1 = 'OdergiesFNK1'
ROBOKASSA_PASSWORD1 = 'OdergiesFNK1'
ROBOKASSA_PASSWORD2 = 'OdergiesFNK2'
# ROBOKASSA_TEST_MODE = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
      'file': {
          'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s'
      }
    },
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
